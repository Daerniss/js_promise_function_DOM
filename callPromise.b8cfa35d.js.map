{"version":3,"sources":["scripts/main.js","scripts/callPromise.js"],"names":["initMessagesContainer","container","document","getElementById","createElement","id","styles","position","top","right","display","flexDirection","gap","property","style","body","append","waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","printMessage","message","notification","insertAdjacentHTML","module","exports","require","loginField","passwordField","button","then"],"mappings":";AAAA,aAEA,IAAMA,EAAwB,WACxBC,IAAAA,EAEA,IAACC,SAASC,eAAe,YAAa,EACxCF,EAAYC,SAASE,cAAc,QACzBC,GAAK,WAETC,IAAAA,EAAS,CACbC,SAAU,WACVC,IAAK,OACLC,MAAO,OACPC,QAAS,OACTC,cAAe,SACfC,IAAK,QAGF,IAAA,IAAMC,KAAYP,EACrBL,EAAUa,MAAMD,GAAYP,EAAOO,GAGrCX,SAASa,KAAKC,OAAOf,KAMzB,SAASgB,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,GAClBH,EAAQI,iBAAiBH,EAAW,WAClCE,EAAkBF,UAAAA,OAAAA,EAChBD,2BAAAA,OAAAA,EAAQK,SAAiBL,UAAAA,OAAAA,EAAQb,GADnC,UALNL,IAWA,IAAMwB,EAAe,SAACC,GACdC,IAAAA,EAEAD,sCAAAA,OAAAA,EAFN,oBAMAvB,SAASC,eAAe,YACrBwB,mBAAmB,YAAaD,IAGrCE,OAAOC,QAAU,CACfZ,QAAAA,EACAO,aAAAA;;AClDF,aAEkCM,IAAAA,EAAAA,QAAQ,UAAlCb,EAAAA,EAAAA,QAASO,EAAAA,EAAAA,aAEXO,EAAa7B,SAASC,eAAe,SACrC6B,EAAgB9B,SAASC,eAAe,YACxC8B,EAAS/B,SAASC,eAAe,UAEvCc,EAAQc,EAAY,SAASG,KAAKV,GAClCP,EAAQe,EAAe,SAASE,KAAKV,GACrCP,EAAQgB,EAAQ,SAASC,KAAKV,GAE9BP,EAAQc,EAAY,SAASG,KAAKV,GAClCP,EAAQe,EAAe,SAASE,KAAKV,GAErCP,EAAQc,EAAY,QAAQG,KAAKV,GACjCP,EAAQe,EAAe,QAAQE,KAAKV,GACpCP,EAAQgB,EAAQ,QAAQC,KAAKV","file":"callPromise.b8cfa35d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst initMessagesContainer = () => {\n  let container;\n\n  if (!document.getElementById('messages')) {\n    container = document.createElement('div');\n    container.id = 'messages';\n\n    const styles = {\n      position: 'absolute',\n      top: '20px',\n      right: '20px',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '10px',\n    };\n\n    for (const property in styles) {\n      container.style[property] = styles[property];\n    }\n\n    document.body.append(container);\n  }\n};\n\ninitMessagesContainer();\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve) => {\n    element.addEventListener(eventName, () => {\n      resolve(`It was ${eventName} on the element: \\\n      ${element.nodeName}, id: ${element.id}.`);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const notification = `\n    <div class=\"message\">\n      ${message}\n    </div>\n  `;\n\n  document.getElementById('messages')\n    .insertAdjacentHTML('beforeend', notification);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n","'use strict';\n\nconst { waitFor, printMessage } = require('./main');\n\nconst loginField = document.getElementById('login');\nconst passwordField = document.getElementById('password');\nconst button = document.getElementById('submit');\n\nwaitFor(loginField, 'click').then(printMessage);\nwaitFor(passwordField, 'click').then(printMessage);\nwaitFor(button, 'click').then(printMessage);\n\nwaitFor(loginField, 'input').then(printMessage);\nwaitFor(passwordField, 'input').then(printMessage);\n\nwaitFor(loginField, 'blur').then(printMessage);\nwaitFor(passwordField, 'blur').then(printMessage);\nwaitFor(button, 'blur').then(printMessage);\n"]}